# [rc] == root collection 
# [sc] == sub collection 

users: # [rc]
  documentId: userId == auth.uid
  groupCount: Int # 作成できるグループ数を制限？  
  username: String(20)
  userIcon: String
  createdAt: Timestamp
  updatedAt: Timestamp

  belongingGroups: # [sc]
    documentId: groupId
    groupRef: groups ref
    unreadMessageCount: Int
    latestReadMessageId: String or messages ref
    updatedAt: Timestamp

groups: # [rc]
  documentId: auto
  groupName: String(20)
  groupLeaderName: String
  groupDescription: String(100)
  groupIcon: String
  groupTagIds: [String]
  groupTagNames: [String]
  userCount: Int
  userIds: [String]
  latestMessage: String
  participantApplications: [userId]
  createdAt: Timestamp
  updatedAt: Timestamp

  groupUsers: # [sc]
    documentId: userId
    userId: userId
    userRef: users ref
    usernameInGroup: String # グループ内での名前
    isAdmin: Boolean
    createdAt(joinedAt): Timestamp

  messages: # [sc] onCreate -> userIdsのそれぞれのbelongingGroups(updatedAt, unreadMessageCount)を更新。
    documentId: auto
    fileURL: String #download URL
    content: String
    fromUser: groupUsers ref
    fromUserId: userId
    fromUserName: String
    fromUserIcon: String
    createdAt: Timestamp
    
groupTags: # [rc]
  documentId: auto
  tagName: String
  createUser: users ref
  createdAt: Timestamp
  updatedAt: Timestamp

posts: # [rc]
  documentId: auto
  fromUsername: String(20)
  fromUserIcon: String
  fromUser: users ref
  trainingDate: Timestamp
  workout: String(100) or [String]
  createdAt: Timestamp
  fileUrl: String

menus: # [rc]
  documentId: auto
  trainingName: String
  createdAt: Timestamp
  updatedAt: Timestamp
